/*
 * @author Stefan Peters
 * Created on 18.03.2005
 */
package de.uni_trier.jane.service.routing.face.planar_graph_explorer;

import de.uni_trier.jane.basetypes.*;
import de.uni_trier.jane.service.neighbor_discovery.*;
import de.uni_trier.jane.service.planarizer.*;

/**
 * This Condition is used to decide where to route the package.
 * @author Stefan Peters
 */
public interface StepSelector {

	/**
	 * Decides the number of the routing step, where the routing algorithm shall route.
	 * @param steps The Routing Path generated by <CODE>PlanarGraphExplorer</CODE>
	 * @return Returns the number of the node, where to route or ERROR if an error occured.
	 * @deprecated use getBestNeighbor
	 */
	public int getStepIndex(RoutingStep[] steps, NetworkNode destinationNode,NeighborDiscoveryData[] neighborData);
	
	/**
	 * 
	 * @return True if only reachables nodes are used
	 */
	public boolean useReachableNodesOnly();
	
	/**
	 * Decides which neighbor is chosen
	 * @param currentNode The NeighborDiscoveryData of the current node
	 * @param neighbors The NeighborDiscoveryDatas of be considered neighbors
	 * @param destinationNode The destination node of routing task
	 * @return Returns the chosen node
	 */
	public Address getBestNeighbor(NeighborDiscoveryData currentNode, NeighborDiscoveryData[] neighbors, NetworkNode destinationNode);
	
}
